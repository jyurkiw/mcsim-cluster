version: "3.9"
services:
    db1:
        image: cassandra
        hostname: db1
        healthcheck:
            test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
            interval: 5s
            timeout: 5s
            retries: 60
        ports:
            - 9042:9042
        networks:
            - cass
        environment: &environment
            CASSANDRA_SEEDS: db1,db2
            CASSANDRA_CLUSTER_NAME: testcluster
            CASSANDRA_DC: test
            CASSANDRA_RACK: testrack
            CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
            CASSANDRA_NUM_TOKENS: 128

    db2:
        image: cassandra
        hostname: db2
        healthcheck:
            test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
            interval: 5s
            timeout: 5s
            retries: 60
        ports:
            - 9043:9042
        networks:
            - cass
        environment: *environment
    db3:
        image: cassandra
        hostname: db3
        healthcheck:
            test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
            interval: 5s
            timeout: 5s
            retries: 60
        ports:
            - 9044:9042
        networks:
            - cass
        environment: *environment
    redis:
        image: redis:alpine
        ports:
            - 6379:6379
        networks:
            - cass
    mcsim:
        build: './sim'
        networks:
            - cass
        tty: true
        stdin_open: true
        environment:
            - API_URL=http://mcsim-cluster_api_1:5000
            - API_TIMEOUT=3000
            - API_TIMEOUT_STEP=10
            - WORKSPACE_ROOT=/app
            - CASSANDRACLUSTERADDRESSES=["mcsim-cluster_db1_1", "mcsim-cluster_db2_1", "mcsim-cluster_db3_1"]
        deploy:
            mode: replicated
            replicas: 2
    api:
        build: './api'
        networks:
            - cass
        ports:
            - 5000:5000
        environment:
            - REDISADDRESS=mcsim-cluster_redis_1
        tty: true
        stdin_open: true
        command: python /api/app.py
    test:
        build: './test'
        networks:
            - cass
        tty: true
        stdin_open: true
networks:
    cass:
        driver: bridge